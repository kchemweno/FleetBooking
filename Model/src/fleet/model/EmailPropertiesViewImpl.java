package fleet.model;

import oracle.jbo.ApplicationModule;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.client.Configuration;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 08 13:27:50 EAT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EmailPropertiesViewImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
 //   private  ApplicationModule appMod = Configuration.createRootApplicationModule("fleet.model.AppModule", "AppModuleFleetLocal");
    public EmailPropertiesViewImpl() {       
    }
   
    //Get new booking alert subject 
    public String getBookingAlertSubject(){
        String bookingAlertSubject = "";  
        ApplicationModule appMod=null;
        EmailPropertiesViewImpl vo;
        try{
         appMod = Configuration.createRootApplicationModule("fleet.model.AppModule", "AppModuleFleetLocal");             
        vo = (EmailPropertiesViewImpl) appMod.findViewObject("EmailPropertiesView1");
        //Create View criteria
        ViewCriteria viewCriteria = vo.createViewCriteria();
        ViewCriteriaRow viewCriteriaRow = viewCriteria.createViewCriteriaRow();
        viewCriteriaRow.setAttribute("Id",1);//Get only the first row
        viewCriteria.add(viewCriteriaRow);
        viewCriteria.setCriteriaMode(ViewCriteria.CRITERIA_MODE_CACHE);
        vo.applyViewCriteria(viewCriteria);
        vo.executeQuery();       
        while (vo.hasNext()) {
            EmailPropertiesViewRowImpl row = (EmailPropertiesViewRowImpl) vo.next();          
            bookingAlertSubject = row.getEmailBookingAlertSubject(); ;
        }    
        }catch(Exception exception){
            System.err.println("Error in getBookingAlertSubject() method");
        }finally{
            if(appMod != null){
                Configuration.releaseRootApplicationModule(appMod, false);                      
            }
            vo = null;
        }
        return bookingAlertSubject;
    }    
    
    //Get new booking alert body 
    public String getBookingAlertBody() {
        ApplicationModule appMod=null;
        String bookingAlertBody = "";
        EmailPropertiesViewImpl vo;
        try{
         appMod = Configuration.createRootApplicationModule("fleet.model.AppModule", "AppModuleFleetLocal");              
         vo = (EmailPropertiesViewImpl) appMod.findViewObject("EmailPropertiesView1");
        //Create View criteria
        ViewCriteria viewCriteria = vo.createViewCriteria();
        ViewCriteriaRow viewCriteriaRow = viewCriteria.createViewCriteriaRow();
        viewCriteriaRow.setAttribute("Id",1);//Get only the first row
        viewCriteria.add(viewCriteriaRow);
        viewCriteria.setCriteriaMode(ViewCriteria.CRITERIA_MODE_CACHE);
        vo.applyViewCriteria(viewCriteria);
        vo.executeQuery();       
        while (vo.hasNext()) {
            EmailPropertiesViewRowImpl row = (EmailPropertiesViewRowImpl) vo.next();          
            bookingAlertBody = row.getEmailBookingAlertBody(); 
        } 
        }catch(Exception exception){
            System.err.println("Error in getBookingAlertBody() method");
        }finally{
            if(appMod != null){
                Configuration.releaseRootApplicationModule(appMod, false);                      
            }
            vo = null;
        }
        return bookingAlertBody;
    }    
    
    //Get new booking approved subject 
    public String getBookingApprovedSubject() {
        ApplicationModule appMod=null;
        EmailPropertiesViewImpl vo;
        String bookingApprovedSubject = "";
        try{
         appMod = Configuration.createRootApplicationModule("fleet.model.AppModule", "AppModuleFleetLocal");               
         vo = (EmailPropertiesViewImpl) appMod.findViewObject("EmailPropertiesView1");
        //Create View criteria
        ViewCriteria viewCriteria = vo.createViewCriteria();
        ViewCriteriaRow viewCriteriaRow = viewCriteria.createViewCriteriaRow();
        viewCriteriaRow.setAttribute("Id",1);//Get only the first row
        viewCriteria.add(viewCriteriaRow);
        viewCriteria.setCriteriaMode(ViewCriteria.CRITERIA_MODE_CACHE);
        vo.applyViewCriteria(viewCriteria);
        vo.executeQuery();       
        while (vo.hasNext()) {
            EmailPropertiesViewRowImpl row = (EmailPropertiesViewRowImpl) vo.next();          
            bookingApprovedSubject = row.getEmailBookingApprovedSubject();
        } 
        }catch(Exception exception){
            System.err.println("Error in getBookingApprovedSubject() method");
        }finally{
            if(appMod != null){
                Configuration.releaseRootApplicationModule(appMod, false);                      
            }
            vo = null;
        }
        return bookingApprovedSubject;
    }     
    
    //Get new booking approved body 
    public String getBookingApprovedBody() {
        ApplicationModule appMod=null;
        String bookingApprovedBody = "";       
        EmailPropertiesViewImpl vo;
        try{
            appMod = Configuration.createRootApplicationModule("fleet.model.AppModule", "AppModuleFleetLocal");
            vo = (EmailPropertiesViewImpl) appMod.findViewObject("EmailPropertiesView1");
        //Create View criteria
        ViewCriteria viewCriteria = vo.createViewCriteria();
        ViewCriteriaRow viewCriteriaRow = viewCriteria.createViewCriteriaRow();
        viewCriteriaRow.setAttribute("Id",1);//Get only the first row
        viewCriteria.add(viewCriteriaRow);
        viewCriteria.setCriteriaMode(ViewCriteria.CRITERIA_MODE_CACHE);
        vo.applyViewCriteria(viewCriteria);
        vo.executeQuery();       
        while (vo.hasNext()) {
            EmailPropertiesViewRowImpl row = (EmailPropertiesViewRowImpl) vo.next();          
            bookingApprovedBody = row.getEmailBookingApprovedBody();
        }  
        }catch(Exception excetion){
            System.err.println("Error in getBookingApprovedBody() method");   
        }finally{
            if(appMod != null){
                Configuration.releaseRootApplicationModule(appMod, false);                      
            }
            vo = null;
        }
        return bookingApprovedBody;
    }   
    
    //Get new booking not approved subject 
    public String getBookingNotApprovedSubject() {
        ApplicationModule appMod=null;
        EmailPropertiesViewImpl vo;
        String bookingNotApprovedSubject = "";   
        try{
         appMod = Configuration.createRootApplicationModule("fleet.model.AppModule", "AppModuleFleetLocal");           
         vo = (EmailPropertiesViewImpl) appMod.findViewObject("EmailPropertiesView1");
        //Create View criteria
        ViewCriteria viewCriteria = vo.createViewCriteria();
        ViewCriteriaRow viewCriteriaRow = viewCriteria.createViewCriteriaRow();
        viewCriteriaRow.setAttribute("Id",1);//Get only the first row
        viewCriteria.add(viewCriteriaRow);
        viewCriteria.setCriteriaMode(ViewCriteria.CRITERIA_MODE_CACHE);
        vo.applyViewCriteria(viewCriteria);
        vo.executeQuery();       
        while (vo.hasNext()) {
            EmailPropertiesViewRowImpl row = (EmailPropertiesViewRowImpl) vo.next();          
            bookingNotApprovedSubject = row.getEmailBookingNotApprovedSubject();
        }        
        }catch(Exception exception){
            System.err.println("Error in getBookingNotApprovedSubject() method"); 
        }finally{
            if(appMod != null){
                Configuration.releaseRootApplicationModule(appMod, false);                      
            }
            vo = null;
        }
        return bookingNotApprovedSubject;
    }     
    
    //Get new booking not approved body 
    public String getBookingNotApprovedBody() {
        ApplicationModule appMod=null;
        String bookingNotApprovedBody = "";       
        EmailPropertiesViewImpl vo;
        try{
         appMod = Configuration.createRootApplicationModule("fleet.model.AppModule", "AppModuleFleetLocal");
         vo = (EmailPropertiesViewImpl) appMod.findViewObject("EmailPropertiesView1");
        //Create View criteria
        ViewCriteria viewCriteria = vo.createViewCriteria();
        ViewCriteriaRow viewCriteriaRow = viewCriteria.createViewCriteriaRow();
        viewCriteriaRow.setAttribute("Id",1);//Get only the first row
        viewCriteria.add(viewCriteriaRow);
        viewCriteria.setCriteriaMode(ViewCriteria.CRITERIA_MODE_CACHE);
        vo.applyViewCriteria(viewCriteria);
        vo.executeQuery();       
        while (vo.hasNext()) {
            EmailPropertiesViewRowImpl row = (EmailPropertiesViewRowImpl) vo.next();          
            bookingNotApprovedBody = row.getEmailBookingNotApprovedBody();
        }    
        }catch(Exception exception){
            System.err.println("Error in getBookingNotApprovedSubject() method"); 
        }finally{
            if(appMod != null){
                Configuration.releaseRootApplicationModule(appMod, false);                      
            }
            vo = null;
        }        
        return bookingNotApprovedBody;
    } 
}

